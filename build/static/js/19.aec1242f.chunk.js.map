{"version":3,"sources":["routes/Services/index.js"],"names":["Option","Select","TextArea","Input","Services","props","state","categories_data","sub_categories_data","services_data","is_sub_cat","is_services","isLoading","viewEditModal","viewDeleteModal","viewAddModal","service_id","service_name","service_description","new_service_name","new_service_description","handleCategoryChange","bind","handleSubCategoryChange","columns","title","dataIndex","key","render","data","type","onClick","handleEditCategory","handleDeleteCategory","fetch","api_base_url","method_post","then","response","json","setState","catch","value","this","category_id","requestOptions","method","headers","body","JSON","stringify","push","sub_category_name","sub_category_id","all","serviceArray","forEach","serviceData","index","id","length","setViewEditModal","setViewDeleteModal","message","success","axios","put","axios_config","status","error","setViewAddModal","post","antIcon","style","fontSize","spin","span","className","marginBottom","defaultValue","onChange","map","category_name","indicator","dataSource","centered","visible","footer","header","onCancel","gutter","size","placeholder","e","target","rows","confirmEditService","confirmDeleteService","confirmAddService","React","Component"],"mappings":"+UAOQA,EAAWC,IAAXD,OACAE,EAAaC,IAAbD,SAEFE,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,gBAAiB,GACjBC,oBAAqB,GACrBC,cAAe,GACfC,YAAY,EACZC,aAAa,EACbC,WAAW,EACXC,eAAe,EACfC,iBAAiB,EACjBC,cAAc,EACdC,WAAY,GACZC,aAAc,GACdC,oBAAqB,GACrBC,iBAAkB,GAClBC,wBAAyB,IAE7B,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,wBAA0B,EAAKA,wBAAwBD,KAA7B,gBAC/B,EAAKE,QAAU,CACX,CAAEC,MAAO,OAAQC,UAAW,eAAgBC,IAAK,gBACjD,CAAEF,MAAO,cAAeC,UAAW,sBAAuBC,IAAK,uBAC/D,CAAEF,MAAO,OAAQC,UAAW,GAAIC,IAAK,IAAKC,OAAQ,SAACC,GAAD,OAAU,kBAAC,IAAD,CAAQC,KAAK,UAAUC,QAAS,kBAAM,EAAKC,mBAAmBH,KAA9D,UAC5D,CAAEJ,MAAO,SAAUC,UAAW,GAAIC,IAAK,IAAKC,OAAQ,SAACC,GAAD,OAAU,kBAAC,IAAD,CAAQC,KAAK,SAASC,QAAS,kBAAM,EAAKE,qBAAqBJ,KAA/D,aAxBnD,E,qDA4BnB,WAAqB,IAAD,OAChBK,MAAMC,eAAe,oBAAqBC,eAAaC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5EF,MAAK,SAAAC,GACF,EAAKE,SAAS,CAAEjC,gBAAiB+B,EAAST,KAAMjB,WAAW,OAE9D6B,U,kCAIT,SAAqBC,GAAQ,IAAD,OACxBC,KAAKH,SAAS,CAAEI,YAAaF,IAC7B,IAAMG,EAAiB,CACnBC,gBACAC,kBACAC,KAAMC,KAAKC,UAAU,CAAEN,YAAaF,KAExCR,MAAMC,eAAe,uBAAwBU,GAAgBR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAClFF,MAAK,SAAAC,GAEFA,EAAST,KAAKsB,KADI,CAAE,GAAM,MAAOC,kBAAmB,QAEpD,EAAKZ,SAAS,CAAEhC,oBAAqB8B,EAAST,KAAMnB,YAAY,OAEnE+B,U,qCAIT,SAAwBC,GAAQ,IAAD,OAC3BC,KAAKH,SAAS,CAAEa,gBAAiBX,IACjCC,KAAKH,SAAS,CAAE5B,WAAW,IAC3B,IAAMiC,EAAiB,CACnBC,gBACAC,kBACAC,KAAMC,KAAKC,UAAU,CAAEG,gBAAiBX,EAAOY,IAAe,QAAVZ,KAExDR,MAAMC,eAAe,kBAAmBU,GAAgBR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAC,GACF,IAAIiB,EAAe,GACnBjB,EAAST,KAAK2B,SAAQ,SAACC,EAAaC,GAChCD,EAAY9B,IAAM8B,EAAYE,GAC9BJ,EAAaJ,KAAKM,GACdnB,EAAST,KAAK+B,SAAYF,EAAQ,GAClC,EAAKlB,SAAS,CAAE/B,cAAe8C,EAAc5C,aAAa,EAAMC,WAAW,UAItF6B,U,gCAGT,SAAmBZ,GACfc,KAAKH,SAAS,CAAExB,WAAYa,EAAK8B,GAAI1C,aAAcY,EAAKZ,aAAcC,oBAAqBW,EAAKX,sBAChGyB,KAAKkB,kBAAiB,K,kCAG1B,SAAqBhC,GACjBc,KAAKH,SAAS,CAAExB,WAAYa,EAAK8B,GAAI1C,aAAcY,EAAKZ,aAAcC,oBAAqBW,EAAKX,sBAChGyB,KAAKmB,oBAAmB,K,8BAG5B,SAAiBjD,GAAiB8B,KAAKH,SAAS,CAAE3B,oB,gCAClD,SAAmBC,GAAmB6B,KAAKH,SAAS,CAAE1B,sB,6BACtD,SAAgBC,GAAgB4B,KAAKH,SAAS,CAAEzB,mB,kCAGhD,SAAqBC,GAAa,IAAD,OAC7B2B,KAAKmB,oBAAmB,GACxB,IAAMjB,EAAiB,CACnBC,OAAQ,SACRC,kBACAC,KAAMC,KAAKC,UAAU,CAAElC,WAAYA,KAEvCkB,MAAMC,eAAe,iBAAkBU,GAAgBR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5EF,MAAK,SAAAC,GACFyB,IAAQC,QAAQ,wBAChB,EAAKxB,SAAS,CAAE5B,WAAW,IAC3B,EAAKW,wBAAwB,EAAKjB,MAAM+C,oBAE3CZ,U,gCAIT,WAAsB,IAAD,OACjBE,KAAKkB,kBAAiB,GAEtB,IAAIb,EAAO,CACP,WAAcL,KAAKrC,MAAMU,WACzB,aAAgB2B,KAAKrC,MAAMW,aAC3B,oBAAuB0B,KAAKrC,MAAMY,qBAGtC+C,IAAMC,IAAI/B,eAAe,eAAgBa,EAAMmB,gBAC1C9B,MAAK,SAACC,GACCA,EAAST,KAAKuC,QACdL,IAAQC,QAAQ1B,EAAST,KAAKkC,SAC9B,EAAKvB,SAAS,CAAE5B,WAAW,IAC3B,EAAKW,wBAAwB,EAAKjB,MAAM+C,kBAExCU,IAAQM,MAAM/B,EAAST,KAAKkC,YAGnCtB,OAAM,SAAC4B,GACJN,IAAQM,MAAM,wBAAyBA,Q,+BAKnD,WAAqB,IAAD,OAChB1B,KAAK2B,iBAAgB,GAErB,IAAItB,EAAO,CACP,aAAgBL,KAAKrC,MAAMa,iBAC3B,oBAAuBwB,KAAKrC,MAAMc,wBAClC,gBAAmBuB,KAAKrC,MAAM+C,iBAGlCY,IAAMM,KAAKpC,eAAe,cAAea,EAAMmB,gBAC1C9B,MAAK,SAACC,GACCA,EAAST,KAAKuC,QACdL,IAAQC,QAAQ1B,EAAST,KAAKkC,SAC9B,EAAKvB,SAAS,CAAE5B,WAAW,IAC3B,EAAKW,wBAAwB,EAAKjB,MAAM+C,kBAExCU,IAAQM,MAAM/B,EAAST,KAAKkC,YAGnCtB,OAAM,SAAC4B,GACJN,IAAQM,MAAM,wBAAyBA,Q,oBAInD,WAAU,IAAD,OACL,EAAkJ1B,KAAKrC,MAA/IC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,oBAAqBC,EAA9C,EAA8CA,cAAeC,EAA7D,EAA6DA,WAAYC,EAAzE,EAAyEA,YAAaC,EAAtF,EAAsFA,UAAWC,EAAjG,EAAiGA,cAAeC,EAAhH,EAAgHA,gBAAiBC,EAAjI,EAAiIA,aAC3HyD,EAAU,kBAAC,IAAD,CAAiBC,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAC9D,EAAqGhC,KAAKrC,MAAlGW,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,oBAAqBF,EAA3C,EAA2CA,WAAYG,EAAvD,EAAuDA,iBAAkBC,EAAzE,EAAyEA,wBAEzE,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKwD,KAAM,IAAX,IAAgB,wBAAIC,UAAU,iBAAd,YAAhB,MAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKD,KAAM,IACP,yBAAKH,MAAO,CAAEK,aAAc,OACxB,kBAAC,IAAD,CAAQC,aAAa,kBAAkBC,SAAUrC,KAAKtB,sBACjDd,EAAgB0E,KAAI,SAACpD,GAAD,OACjB,kBAAC7B,EAAD,CAAQ0C,MAAOb,EAAK8B,IAAK9B,EAAKqD,oBAKzCxE,EACG,yBAAK+D,MAAO,CAAEK,aAAc,OACxB,kBAAC,IAAD,CAAQC,aAAa,sBAAsBC,SAAUrC,KAAKpB,yBACrDf,EAAoByE,KAAI,SAACpD,GAAD,OACrB,kBAAC7B,EAAD,CAAQ0C,MAAOb,EAAK8B,IAAK9B,EAAKuB,wBAIxC,MAITxC,EACG,kBAAC,IAAD,CAAKgE,KAAM,IACP,kBAAC,IAAD,CAAMO,UAAWX,KAGrB,oCACK7D,EACG,kBAAC,IAAD,CAAKiE,KAAM,IACP,kBAAC,IAAD,CAAMnD,MAAM,YACR,kBAAC,IAAD,CAAQK,KAAK,UAAUC,QAAS,kBAAM,EAAKuC,iBAAgB,KAA3D,OACA,kBAAC,IAAD,CAAOO,UAAU,sBACbrD,QAASmB,KAAKnB,QACd4D,WAAY3E,MAKxB,OAOhB,kBAAC,IAAD,CACI4E,UAAQ,EACRC,QAASzE,EACT0E,OAAQ,KACRC,OAAQ,KACRC,SAAU,kBAAM,EAAK5B,kBAAiB,KAEtC,kBAAC,IAAD,CAAK6B,OAAQ,IACT,kBAAC,IAAD,CAAKd,KAAM,GAAX,UACW,kBAAC,IAAD,CAAOjB,GAAG,eAAegC,KAAK,QAAQC,YAAY,eAAeb,aAAc9D,EAAc+D,SAAU,SAACa,GAAD,OAAO,EAAKrD,SAAS,CAAEvB,aAAc4E,EAAEC,OAAOpD,WAC5J,6BACA,6BAHJ,iBAIkB,kBAACxC,EAAD,CAAU6F,KAAM,EAAGpC,GAAG,sBAAsBgC,KAAK,QAAQC,YAAY,sBAAsBlD,MAAOxB,EAAqB8D,SAAU,SAACa,GAAD,OAAO,EAAKrD,SAAS,CAAEtB,oBAAqB2E,EAAEC,OAAOpD,aAG5M,6BAEA,yBAAKmC,UAAU,uBACX,kBAAC,IAAD,CAAQ/C,KAAK,UAAUC,QAAS,kBAAM,EAAKiE,uBAA3C,UACA,kBAAC,IAAD,CAAQjE,QAAS,kBAAM,EAAK8B,kBAAiB,KAA7C,YAMR,kBAAC,IAAD,CACIwB,UAAQ,EACRC,QAASxE,EACTyE,OAAQ,KACRC,OAAQ,KACRC,SAAU,kBAAM,EAAK3B,oBAAmB,KAExC,uBAAGe,UAAU,wBAAb,mCAAqE5D,EAArE,KACA,yBAAK4D,UAAU,uBACX,kBAAC,IAAD,CAAQ/C,KAAK,UAAUC,QAAS,kBAAM,EAAKkE,qBAAqBjF,KAAhE,OACA,kBAAC,IAAD,CAAQe,QAAS,kBAAM,EAAK+B,oBAAmB,KAA/C,QAMR,kBAAC,IAAD,CACIuB,UAAQ,EACRC,QAASvE,EACTwE,OAAQ,KACRC,OAAQ,KACRC,SAAU,kBAAM,EAAKnB,iBAAgB,KAErC,kBAAC,IAAD,CAAKoB,OAAQ,IACT,kBAAC,IAAD,CAAKd,KAAM,GAAX,UACW,kBAAC,IAAD,CAAOe,KAAK,QAAQC,YAAY,eAAeb,aAAc5D,EAAkB6D,SAAU,SAACa,GAAD,OAAO,EAAKrD,SAAS,CAAErB,iBAAkB0E,EAAEC,OAAOpD,WAClJ,6BACA,6BAHJ,iBAIkB,kBAACxC,EAAD,CAAU6F,KAAM,EAAGJ,KAAK,QAAQC,YAAY,sBAAsBlD,MAAOtB,EAAyB4D,SAAU,SAACa,GAAD,OAAO,EAAKrD,SAAS,CAAEpB,wBAAyByE,EAAEC,OAAOpD,aAG3L,6BAEA,yBAAKmC,UAAU,uBACX,kBAAC,IAAD,CAAQ/C,KAAK,UAAUC,QAAS,kBAAM,EAAKmE,kBAAkBlF,KAA7D,UACA,kBAAC,IAAD,CAAQe,QAAS,kBAAM,EAAK8B,kBAAiB,KAA7C,iB,GAnRDsC,IAAMC,WA4RdhG","file":"static/js/19.aec1242f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Row, Spin, Card, Modal, Button, Input, message, Select, Table } from \"antd\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport { api_base_url, method_post, method, headers, axios_config } from '../../util/config'\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nclass Services extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories_data: [],\n            sub_categories_data: [],\n            services_data: [],\n            is_sub_cat: false,\n            is_services: false,\n            isLoading: true,\n            viewEditModal: false,\n            viewDeleteModal: false,\n            viewAddModal: false,\n            service_id: '',\n            service_name: '',\n            service_description: '',\n            new_service_name: '',\n            new_service_description: ''\n        };\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.handleSubCategoryChange = this.handleSubCategoryChange.bind(this);\n        this.columns = [\n            { title: 'Name', dataIndex: 'service_name', key: 'service_name' },\n            { title: 'Description', dataIndex: 'service_description', key: 'service_description' },\n            { title: 'Edit', dataIndex: '', key: 'x', render: (data) => <Button type=\"primary\" onClick={() => this.handleEditCategory(data)}>Edit</Button> },\n            { title: 'Delete', dataIndex: '', key: 'x', render: (data) => <Button type=\"danger\" onClick={() => this.handleDeleteCategory(data)}>Delete</Button> },\n        ];\n    }\n\n    componentDidMount() {\n        fetch(api_base_url + \"listAllCategories\", method_post).then(response => response.json())\n            .then(response => {\n                this.setState({ categories_data: response.data, isLoading: false })\n            })\n            .catch();\n    }\n\n    // Select Category\n    handleCategoryChange(value) {\n        this.setState({ category_id: value })\n        const requestOptions = {\n            method,\n            headers,\n            body: JSON.stringify({ category_id: value })\n        }\n        fetch(api_base_url + \"listAllSubCategories\", requestOptions).then(response => response.json())\n            .then(response => {\n                let allServices = { \"id\": \"all\", sub_category_name: \"All\" }\n                response.data.push(allServices)\n                this.setState({ sub_categories_data: response.data, is_sub_cat: true })\n            })\n            .catch();\n    }\n\n    // Select Sub Category\n    handleSubCategoryChange(value) {\n        this.setState({ sub_category_id: value })\n        this.setState({ isLoading: true })\n        const requestOptions = {\n            method,\n            headers,\n            body: JSON.stringify({ sub_category_id: value, all: value === \"all\" ? true : false })\n        }\n        fetch(api_base_url + \"listAllServices\", requestOptions).then(response => response.json())\n            .then(response => {\n                let serviceArray = [];\n                response.data.forEach((serviceData, index) => {\n                    serviceData.key = serviceData.id;\n                    serviceArray.push(serviceData)\n                    if (response.data.length === (index + 1)) {\n                        this.setState({ services_data: serviceArray, is_services: true, isLoading: false })\n                    }\n                })\n            })\n            .catch();\n    }\n\n    handleEditCategory(data) {\n        this.setState({ service_id: data.id, service_name: data.service_name, service_description: data.service_description })\n        this.setViewEditModal(true)\n    }\n\n    handleDeleteCategory(data) {\n        this.setState({ service_id: data.id, service_name: data.service_name, service_description: data.service_description })\n        this.setViewDeleteModal(true)\n    }\n\n    setViewEditModal(viewEditModal) { this.setState({ viewEditModal }) }\n    setViewDeleteModal(viewDeleteModal) { this.setState({ viewDeleteModal }) }\n    setViewAddModal(viewAddModal) { this.setState({ viewAddModal }) }\n\n    // Confirm Delete Services\n    confirmDeleteService(service_id) {\n        this.setViewDeleteModal(false)\n        const requestOptions = {\n            method: 'DELETE',\n            headers,\n            body: JSON.stringify({ service_id: service_id })\n        }\n        fetch(api_base_url + \"deleteServices\", requestOptions).then(response => response.json())\n            .then(response => {\n                message.success(\"Removed Successfully\")\n                this.setState({ isLoading: true })\n                this.handleSubCategoryChange(this.state.sub_category_id)\n            })\n            .catch();\n    }\n\n    // Confirm Edit Category\n    confirmEditService() {\n        this.setViewEditModal(false)\n\n        let body = {\n            \"service_id\": this.state.service_id,\n            \"service_name\": this.state.service_name,\n            \"service_description\": this.state.service_description\n        }\n\n        axios.put(api_base_url + 'editServices', body, axios_config)\n            .then((response) => {\n                if (response.data.status) {\n                    message.success(response.data.message)\n                    this.setState({ isLoading: true })\n                    this.handleSubCategoryChange(this.state.sub_category_id)\n                } else {\n                    message.error(response.data.message)\n                }\n            })\n            .catch((error) => {\n                message.error(\"Something went wrong!\", error)\n            })\n    }\n\n    // Confirm Add Services\n    confirmAddService() {\n        this.setViewAddModal(false)\n\n        let body = {\n            \"service_name\": this.state.new_service_name,\n            \"service_description\": this.state.new_service_description,\n            \"sub_category_id\": this.state.sub_category_id\n        }\n\n        axios.post(api_base_url + 'addServices', body, axios_config)\n            .then((response) => {\n                if (response.data.status) {\n                    message.success(response.data.message)\n                    this.setState({ isLoading: true })\n                    this.handleSubCategoryChange(this.state.sub_category_id)\n                } else {\n                    message.error(response.data.message)\n                }\n            })\n            .catch((error) => {\n                message.error(\"Something went wrong!\", error)\n            })\n    }\n\n    render() {\n        const { categories_data, sub_categories_data, services_data, is_sub_cat, is_services, isLoading, viewEditModal, viewDeleteModal, viewAddModal } = this.state;\n        const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n        const { service_name, service_description, service_id, new_service_name, new_service_description } = this.state;\n\n        return (\n            <div>\n                <Row>\n                    <Col span={24}> <h2 className=\"title gx-mb-4\">Services</h2> </Col>\n                </Row>\n                <Row>\n                    <Col span={12}>\n                        <div style={{ marginBottom: \"3%\" }}>\n                            <Select defaultValue=\"Select Category\" onChange={this.handleCategoryChange}>\n                                {categories_data.map((data) => (\n                                    <Option value={data.id}>{data.category_name}</Option>\n                                ))}\n                            </Select>\n                        </div>\n\n                        {is_sub_cat ?\n                            <div style={{ marginBottom: \"3%\" }}>\n                                <Select defaultValue=\"Select Sub Category\" onChange={this.handleSubCategoryChange}>\n                                    {sub_categories_data.map((data) => (\n                                        <Option value={data.id}>{data.sub_category_name}</Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            : null\n                        }\n                    </Col>\n\n                    {isLoading ?\n                        <Col span={24}>\n                            <Spin indicator={antIcon} />\n                        </Col>\n                        :\n                        <>\n                            {is_services ?\n                                <Col span={24}>\n                                    <Card title=\"Services\">\n                                        <Button type=\"primary\" onClick={() => this.setViewAddModal(true)}>Add</Button>\n                                        <Table className=\"gx-table-responsive\"\n                                            columns={this.columns}\n                                            dataSource={services_data}\n                                        />\n                                    </Card>\n                                </Col>\n                                :\n                                null\n                            }\n                        </>\n                    }\n                </Row>\n\n                {/* View Edit Modal */}\n                <Modal\n                    centered\n                    visible={viewEditModal}\n                    footer={null}\n                    header={null}\n                    onCancel={() => this.setViewEditModal(false)}>\n\n                    <Row gutter={16}>\n                        <Col span={8}>\n                            Name : <Input id='service_name' size=\"large\" placeholder=\"Service Name\" defaultValue={service_name} onChange={(e) => this.setState({ service_name: e.target.value })} />\n                            <br />\n                            <br />\n                            Description : <TextArea rows={4} id='service_description' size=\"large\" placeholder=\"Service Description\" value={service_description} onChange={(e) => this.setState({ service_description: e.target.value })} />\n                        </Col>\n                    </Row>\n                    <br />\n\n                    <div className=\"gx-card-list-footer\">\n                        <Button type=\"primary\" onClick={() => this.confirmEditService()}>Update</Button>\n                        <Button onClick={() => this.setViewEditModal(false)}>Cancel</Button>\n                    </div>\n\n                </Modal>\n\n                {/* View Delete Modal */}\n                <Modal\n                    centered\n                    visible={viewDeleteModal}\n                    footer={null}\n                    header={null}\n                    onCancel={() => this.setViewDeleteModal(false)}>\n\n                    <p className=\"gx-text-grey gx-mb-2\">Are you sure you want to delete {service_name}?</p>\n                    <div className=\"gx-card-list-footer\">\n                        <Button type=\"primary\" onClick={() => this.confirmDeleteService(service_id)}>Yes</Button>\n                        <Button onClick={() => this.setViewDeleteModal(false)}>No</Button>\n                    </div>\n\n                </Modal>\n\n                {/* View Add Modal */}\n                <Modal\n                    centered\n                    visible={viewAddModal}\n                    footer={null}\n                    header={null}\n                    onCancel={() => this.setViewAddModal(false)}>\n\n                    <Row gutter={16}>\n                        <Col span={8}>\n                            Name : <Input size=\"large\" placeholder=\"Service Name\" defaultValue={new_service_name} onChange={(e) => this.setState({ new_service_name: e.target.value })} />\n                            <br />\n                            <br />\n                            Description : <TextArea rows={4} size=\"large\" placeholder=\"Service Description\" value={new_service_description} onChange={(e) => this.setState({ new_service_description: e.target.value })} />\n                        </Col>\n                    </Row>\n                    <br />\n\n                    <div className=\"gx-card-list-footer\">\n                        <Button type=\"primary\" onClick={() => this.confirmAddService(service_id)}>Update</Button>\n                        <Button onClick={() => this.setViewEditModal(false)}>Cancel</Button>\n                    </div>\n\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Services;\n"],"sourceRoot":""}