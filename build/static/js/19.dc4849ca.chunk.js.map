{"version":3,"sources":["routes/SubCategories/index.js"],"names":["Meta","Card","Option","Select","SubCategories","props","handleChange","info","setState","is_pic_change","file","status","image_obj","originFileObj","getBase64","category_picture","loading","handleChangeAdd","new_image_obj","new_sub_category_picture","state","categories_data","sub_categories_data","category_id","is_sub_cat","isLoading","viewEditModal","viewDeleteModal","sub_category_id","sub_category_title","sub_category_picture","new_sub_category_title","handleChangeCategory","bind","fetch","api_base_url","method_post","then","response","json","data","catch","value","this","requestOptions","method","headers","body","JSON","stringify","id","sub_category_name","picture","setViewEditModal","setViewDeleteModal","viewAddModal","message","success","formData","FormData","append","axios","put","axios_config","error","setViewAddModal","post","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","isJpgOrPng","type","isLt2M","size","antIcon","style","fontSize","spin","uploadButton","marginTop","span","className","marginBottom","defaultValue","width","onChange","map","category_name","indicator","onClick","gutter","index","cover","alt","src","height","actions","key","handleEditCategory","handleDeleteCategory","title","centered","visible","footer","header","onCancel","name","listType","showUploadList","action","beforeUpload","placeholder","e","target","confirmEditCategory","confirmDeleteCategory","confirmAddCategory","React","Component"],"mappings":"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","file":"static/js/19.dc4849ca.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Row, Spin, Card, Modal, Button, Input, Upload, message, Select } from \"antd\";\nimport { LoadingOutlined, EditOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport { api_base_url, method_post, method, headers, axios_config } from '../../util/config'\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nclass SubCategories extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories_data: [],\n            sub_categories_data: [],\n            category_id: '',\n            is_sub_cat: false,\n            isLoading: true,\n            viewEditModal: false,\n            viewDeleteModal: false,\n            sub_category_id: '',\n            sub_category_title: '',\n            sub_category_picture: '',\n            is_pic_change: false,\n            new_sub_category_title: '',\n            new_sub_category_picture: '',\n        };\n        this.handleChangeCategory = this.handleChangeCategory.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(api_base_url + \"listAllCategories\", method_post).then(response => response.json())\n            .then(response => {\n                this.setState({ categories_data: response.data, isLoading: false })\n            })\n            .catch();\n    }\n\n    handleChangeCategory(value) {\n        this.setState({ category_id: value })\n        this.setState({ isLoading: true })\n        const requestOptions = {\n            method,\n            headers,\n            body: JSON.stringify({ category_id: value })\n        }\n        fetch(api_base_url + \"listAllSubCategories\", requestOptions).then(response => response.json())\n            .then(response => {\n                this.setState({ sub_categories_data: response.data, is_sub_cat: true, isLoading: false })\n            })\n            .catch();\n    }\n\n    handleEditCategory(data) {\n        this.setState({ sub_category_id: data.id, sub_category_title: data.sub_category_name, sub_category_picture: data.picture })\n        this.setViewEditModal(true)\n    }\n\n    handleDeleteCategory(data) {\n        this.setState({ sub_category_id: data.id })\n        this.setViewDeleteModal(true)\n    }\n\n    setViewEditModal(viewEditModal) { this.setState({ viewEditModal }) }\n    setViewDeleteModal(viewDeleteModal) { this.setState({ viewDeleteModal }) }\n    setViewAddModal(viewAddModal) { this.setState({ viewAddModal }) }\n\n    // Confirm Delete Category\n    confirmDeleteCategory(sub_category_id) {\n        this.setViewDeleteModal(false)\n        const requestOptions = {\n            method: 'DELETE',\n            headers,\n            body: JSON.stringify({ sub_category_id: sub_category_id })\n        }\n        fetch(api_base_url + \"deleteSubCategory\", requestOptions).then(response => response.json())\n            .then(response => {\n                message.success(\"Removed Successfully\")\n                this.setState({ isLoading: true })\n                this.handleChangeCategory(this.state.category_id)\n            })\n            .catch();\n    }\n\n    // Confirm Edit Category\n    confirmEditCategory(sub_category_id) {\n        this.setViewEditModal(false)\n\n        var formData = new FormData();\n        if (this.state.is_pic_change === true)\n            formData.append(\"image\", this.state.image_obj)\n\n        formData.append(\"sub_category_name\", this.state.sub_category_title)\n        formData.append(\"sub_category_id\", sub_category_id)\n        formData.append(\"is_pic_change\", this.state.is_pic_change)\n\n        axios.put(api_base_url + 'editSubCategory', formData, axios_config)\n            .then((response) => {\n                if (response.data.status) {\n                    message.success(response.data.message)\n                    this.setState({ isLoading: true })\n                    this.handleChangeCategory(this.state.category_id)\n                } else {\n                    message.error(response.data.message)\n                }\n            })\n            .catch((error) => {\n                message.error(\"Something went wrong!\", error)\n            })\n    }\n\n    // Confirm Add Sub Category\n    confirmAddCategory() {\n        this.setViewAddModal(false)\n\n        var formData = new FormData();\n        formData.append(\"image\", this.state.new_image_obj)\n        formData.append(\"sub_category_name\", this.state.new_sub_category_title)\n        formData.append(\"category_id\", this.state.category_id)\n\n        axios.post(api_base_url + 'addSubCategory', formData, axios_config)\n            .then((response) => {\n                if (response.data.status) {\n                    message.success(response.data.message)\n                    this.setState({ isLoading: true })\n                    this.handleChangeCategory(this.state.category_id)\n                } else {\n                    message.error(response.data.message)\n                }\n            })\n            .catch((error) => {\n                message.error(\"Something went wrong!\", error)\n            })\n    }\n\n    // Upload Category Image\n    getBase64(img, callback) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    beforeUpload(file) {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('Image must smaller than 2MB!');\n        }\n        return isJpgOrPng && isLt2M;\n    }\n\n    handleChange = info => {\n        this.setState({ is_pic_change: true })\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.setState({ image_obj: info.file.originFileObj })\n            this.getBase64(info.file.originFileObj, category_picture =>\n                this.setState({\n                    category_picture,\n                    loading: false,\n                }),\n            );\n        }\n    };\n\n    // Add New Sub Category Picture\n    handleChangeAdd = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.setState({ new_image_obj: info.file.originFileObj })\n            this.getBase64(info.file.originFileObj, new_sub_category_picture =>\n                this.setState({\n                    new_sub_category_picture,\n                    loading: false,\n                }),\n            );\n        }\n    };\n\n    render() {\n        const { categories_data, sub_categories_data, is_sub_cat, isLoading, viewEditModal, viewDeleteModal, viewAddModal } = this.state;\n        const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\n        const { loading, sub_category_picture, sub_category_title, sub_category_id, new_sub_category_picture, new_sub_category_title } = this.state;\n        const uploadButton = (\n            <div>\n                {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                <div style={{ marginTop: 8 }}>Upload</div>\n            </div>\n        );\n\n        return (\n            <div>\n                {/* Populate Data */}\n                <Row>\n                    <Col span={24}>\n                        <h2 className=\"title gx-mb-4\">Sub Categories</h2>\n                        <div style={{ marginBottom: \"1%\" }}>\n                            <Select defaultValue=\"Select Category\" style={{ width: '30%' }} onChange={this.handleChangeCategory}>\n                                {categories_data.map((data) => (\n                                    <Option value={data.id}>{data.category_name}</Option>\n                                ))}\n                            </Select>\n                        </div>\n                    </Col>\n                    {\n                        isLoading ?\n                            <Col span={24}>\n                                <Spin indicator={antIcon} />\n                            </Col>\n                            :\n                            <>\n                                {is_sub_cat ?\n                                    <Col span={24}>\n                                        <Button type=\"primary\" onClick={() => this.setViewAddModal(true)}>Add</Button>\n                                        <div className=\"site-card-wrapper\">\n                                            <Row gutter={16}>\n                                                {sub_categories_data.map((data, index) => (\n                                                    <Col span={6}>\n                                                        <Card\n                                                            style={{ width: 300 }}\n                                                            cover={<img alt={data.picture} src={data.picture} width=\"300px\" height=\"125px\" />}\n                                                            actions={[\n                                                                <EditOutlined key=\"edit\" onClick={() => this.handleEditCategory(data)} />,\n                                                                <DeleteOutlined key=\"delete\" onClick={() => this.handleDeleteCategory(data)} />\n                                                            ]}>\n                                                            <Meta title={data.sub_category_name} />\n                                                        </Card>\n                                                    </Col>\n                                                ))}\n                                            </Row>\n                                        </div>\n                                    </Col>\n                                    :\n                                    null\n                                }\n                            </>\n                    }\n                </Row>\n\n                {/* View Edit Modal */}\n                <Modal\n                    centered\n                    visible={viewEditModal}\n                    footer={null}\n                    header={null}\n                    onCancel={() => this.setViewEditModal(false)}>\n\n                    <Row gutter={16}>\n                        <Col span={8}>\n                            <Upload\n                                name=\"avatar\"\n                                listType=\"picture-card\"\n                                className=\"avatar-uploader\"\n                                showUploadList={false}\n                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                                beforeUpload={this.beforeUpload}\n                                onChange={this.handleChange} >\n                                {sub_category_picture ? <img src={sub_category_picture} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                            </Upload>\n\n                            <Input id='sub_cat_name' size=\"large\" placeholder=\"Sub Category Name\" defaultValue={sub_category_title} onChange={(e) => this.setState({ sub_category_title: e.target.value })} />\n                        </Col>\n                    </Row>\n                    <br />\n\n                    <div className=\"gx-card-list-footer\">\n                        <Button type=\"primary\" onClick={() => this.confirmEditCategory(sub_category_id)}>Update</Button>\n                        <Button onClick={() => this.setViewEditModal(false)}>Cancel</Button>\n                    </div>\n\n                </Modal>\n\n                {/* View Delete Modal */}\n                <Modal\n                    centered\n                    visible={viewDeleteModal}\n                    footer={null}\n                    header={null}\n                    onCancel={() => this.setViewDeleteModal(false)}>\n\n                    <p className=\"gx-text-grey gx-mb-2\">Are you sure you want to delete {sub_category_title}?</p>\n                    <div className=\"gx-card-list-footer\">\n                        <Button type=\"primary\" onClick={() => this.confirmDeleteCategory(sub_category_id)}>Yes</Button>\n                        <Button onClick={() => this.setViewDeleteModal(false)}>No</Button>\n                    </div>\n\n                </Modal>\n\n                {/* View Add Modal */}\n                <Modal\n                    centered\n                    visible={viewAddModal}\n                    footer={null}\n                    header={null}\n                    onCancel={() => this.setViewAddModal(false)}>\n\n                    <Row gutter={16}>\n                        <Col span={8}>\n                            <Upload\n                                name=\"avatar\"\n                                listType=\"picture-card\"\n                                className=\"avatar-uploader\"\n                                showUploadList={false}\n                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                                beforeUpload={this.beforeUpload}\n                                onChange={this.handleChangeAdd} >\n                                {new_sub_category_picture ? <img src={new_sub_category_picture} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                            </Upload>\n\n                            <Input size=\"large\" placeholder=\"Category Name\" defaultValue={new_sub_category_title} onChange={(e) => this.setState({ new_sub_category_title: e.target.value })} />\n                        </Col>\n                    </Row>\n                    <br />\n\n                    <div className=\"gx-card-list-footer\">\n                        <Button type=\"primary\" onClick={() => this.confirmAddCategory()}>Add</Button>\n                        <Button onClick={() => this.setViewAddModal(false)}>Cancel</Button>\n                    </div>\n\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default SubCategories;\n"],"sourceRoot":""}