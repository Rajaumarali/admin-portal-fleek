{"version":3,"sources":["routes/PaymentRequestedDetails/index.js"],"names":["Option","Select","PaymentRequestedDetails","props","setPaid","data","body","id","axios","put","api_base_url","axios_config","then","response","status","message","success","setState","isLoading","handleChangeStatus","error","catch","is_payment_get","requestOptions","method","headers","JSON","stringify","fetch","json","payment_requests_data","state","payment_status","name","viewBankDetailsModal","bankDetails","type","columns","title","dataIndex","key","render","onClick","viewPaymentDetails","columns_completed","this","barber_id","setViewBankDetailsModal","antIcon","style","fontSize","spin","span","className","marginBottom","defaultValue","width","onChange","map","value","indicator","dataSource","centered","visible","footer","header","onCancel","acc_name","acc_num","bank_address","local_address","routing_num","swift_code","full_name","address_1","address_2","city","postal_code","React","Component"],"mappings":"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","file":"static/js/17.27d06cc9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Table, Spin, Button, Col, Row, Select, message, Modal } from \"antd\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport { api_base_url, method, headers, axios_config } from '../../util/config'\n\nconst { Option } = Select;\n\nclass PaymentRequestedDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            payment_requests_data: [],\n            isLoading: true,\n            is_payment_get: false,\n            payment_status: [\n                { name: 'pending' },\n                { name: 'completed' }\n            ],\n            status: \"pending\",\n            viewBankDetailsModal: false,\n            bankDetails: null,\n            type: ''\n        };\n        this.columns = [\n            { title: 'ID', dataIndex: 'id', key: 'full_name' },\n            { title: 'Name', dataIndex: 'full_name', key: 'full_name' },\n            { title: 'Requested Amount ($)', dataIndex: 'requested_amount', key: 'requested_amount' },\n            { title: 'Payment Type', dataIndex: 'type', key: 'type' },\n            { title: 'Barber ID', dataIndex: 'barber_id', key: 'barber_id' },\n            { title: 'Status', dataIndex: 'status', key: 'status' },\n            { title: 'Paid', dataIndex: '', key: 'x', render: (data) => <Button type=\"primary\" onClick={() => this.setPaid(data)}>Paid</Button> },\n            { title: 'View Details', dataIndex: '', key: 'x', render: (data) => <Button type=\"primary\" onClick={() => this.viewPaymentDetails(data)}>View Bank Details</Button> }\n        ];\n        this.columns_completed = [\n            { title: 'ID', dataIndex: 'id', key: 'full_name' },\n            { title: 'Name', dataIndex: 'full_name', key: 'full_name' },\n            { title: 'Requested Amount ($)', dataIndex: 'requested_amount', key: 'requested_amount' },\n            { title: 'Payment Type', dataIndex: 'type', key: 'type' },\n            { title: 'Barber ID', dataIndex: 'barber_id', key: 'barber_id' },\n            { title: 'View Details', dataIndex: '', key: 'x', render: (data) => <Button type=\"primary\" onClick={() => this.viewPaymentDetails(data)}>View Bank Details</Button> },\n        ]\n    }\n\n    setPaid = data => {\n        let body = {\n            \"id\": data.id,\n        }\n\n        axios.put(api_base_url + 'updatePaymentRequest', body, axios_config)\n            .then((response) => {\n                if (response.data.status) {\n                    message.success(response.data.message)\n                    this.setState({ isLoading: true })\n                    this.handleChangeStatus(\"pending\")\n                } else {\n                    message.error(response.data.message)\n                }\n            })\n            .catch((error) => {\n                message.error(\"Something went wrong!\", error)\n            })\n    };\n\n    viewPaymentDetails(data) {\n        this.setState({ type: data.type })\n\n        const requestOptions = {\n            method,\n            headers,\n            body: JSON.stringify({ barber_id: data.barber_id, type: data.type })\n        }\n        fetch(api_base_url + \"viewPaymentDetails\", requestOptions).then(response => response.json())\n            .then(response => {\n                this.setState({ bankDetails: response.data[0] })\n                this.setViewBankDetailsModal(true)\n            })\n            .catch();\n    }\n\n    setViewBankDetailsModal(viewBankDetailsModal) { this.setState({ viewBankDetailsModal }) }\n\n    handleChangeStatus = status => {\n        this.setState({ isLoading: true, is_payment_get: true, status: status })\n        const requestOptions = {\n            method,\n            headers,\n            body: JSON.stringify({ status: status })\n        }\n        fetch(api_base_url + \"listAllPaymentRequest\", requestOptions).then(response => response.json())\n            .then(response => {\n                this.setState({ payment_requests_data: response.data, isLoading: false })\n            })\n            .catch();\n    }\n\n    render() {\n        const { payment_requests_data, isLoading, payment_status, is_payment_get, status, viewBankDetailsModal, bankDetails, type } = this.state;\n        const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\n        return (\n            <>\n                <Row>\n                    <Col span={24}>\n                        <h2 className=\"title gx-mb-4\">Payment Requested By Barber</h2>\n                        <div style={{ marginBottom: \"1%\" }}>\n                            <Select defaultValue=\"Search By Status\" style={{ width: '30%' }} onChange={this.handleChangeStatus}>\n                                {payment_status.map((data) => (\n                                    <Option value={data.name}>{data.name}</Option>\n                                ))}\n                            </Select>\n                        </div>\n                    </Col>\n                    {is_payment_get ?\n                        <>\n                            {isLoading ? <Spin indicator={antIcon} /> :\n                                <>\n                                    {status === \"pending\" ?\n                                        <Col span={24}>\n                                            <Card title=\"Pending Payment Requests\">\n                                                <Table className=\"gx-table-responsive\"\n                                                    columns={this.columns}\n                                                    dataSource={payment_requests_data}\n                                                />\n                                            </Card>\n                                        </Col>\n                                        :\n                                        <Col span={24}>\n                                            <Card title=\"Completed Payment Requests\">\n                                                <Table className=\"gx-table-responsive\"\n                                                    columns={this.columns_completed}\n                                                    dataSource={payment_requests_data}\n                                                />\n                                            </Card>\n                                        </Col>\n                                    }\n                                </>\n                            }\n                        </>\n                        : null\n\n                    }\n                </Row>\n\n                {/* View Delete Modal */}\n                <Modal\n                    centered\n                    visible={viewBankDetailsModal}\n                    footer={null}\n                    header={null}\n                    onCancel={() => this.setViewBankDetailsModal(false)}>\n\n                    <h1 className=\"gx-text-grey gx-mb-2\">Transfer Details</h1>\n                    <p className=\"gx-text-grey gx-mb-2\">\n                        <>\n\n                            {type ?\n                                <>\n                                    {type === \"bank_address\" ?\n                                        <>\n                                            {bankDetails ?\n                                                <>\n                                                    <strong>Account Name : </strong>{bankDetails.acc_name} <br />\n                                                    <strong>Account Number : </strong>{bankDetails.acc_num} <br />\n                                                    <strong>Bank Address : </strong>{bankDetails.bank_address} <br />\n                                                    <strong>Local Address : </strong>{bankDetails.local_address} <br />\n                                                    <strong>Routing Number : </strong>{bankDetails.routing_num} <br />\n                                                    <strong>Swift Code : </strong>{bankDetails.swift_code} <br />\n                                                </>\n                                                : null\n                                            }\n                                        </>\n                                        :\n                                        <>\n                                            {bankDetails ?\n                                                <>\n                                                    <strong>Full Name : </strong>{bankDetails.full_name} <br />\n                                                    <strong>Address 1 : </strong>{bankDetails.address_1} <br />\n                                                    <strong>Address 2 : </strong>{bankDetails.address_2} <br />\n                                                    <strong>City : </strong>{bankDetails.city} <br />\n                                                    <strong>State : </strong>{bankDetails.state} <br />\n                                                    <strong>Postal Code : </strong>{bankDetails.postal_code} <br />\n                                                </>\n                                                : null\n                                            }\n                                        </>}\n                                </>\n                                : null}\n                        </>\n                    </p>\n                    <div className=\"gx-card-list-footer\">\n                        <Button onClick={() => this.setViewBankDetailsModal(false)}>Done</Button>\n                    </div>\n\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default PaymentRequestedDetails;\n"],"sourceRoot":""}