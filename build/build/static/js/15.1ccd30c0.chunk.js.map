{"version":3,"sources":["routes/Categories/index.js"],"names":["Meta","Card","Categories","props","handleChange","info","setState","is_pic_change","file","status","image_obj","originFileObj","getBase64","category_picture","loading","handleChangeAdd","new_image_obj","new_category_picture","state","categories_data","isLoading","viewEditModal","viewDeleteModal","viewAddModal","category_id","category_title","new_category_title","handleEditCategory","bind","handleDeleteCategory","this","fetchAllCategories","fetch","api_base_url","method_post","then","response","json","data","catch","id","category_name","picture","setViewEditModal","setViewDeleteModal","requestOptions","method","headers","body","JSON","stringify","message","success","formData","FormData","append","axios","put","axios_config","error","setViewAddModal","post","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","isJpgOrPng","type","isLt2M","size","antIcon","style","fontSize","spin","uploadButton","marginTop","span","className","onClick","indicator","gutter","map","index","width","cover","alt","src","height","actions","key","title","centered","visible","footer","header","onCancel","name","listType","showUploadList","action","beforeUpload","onChange","placeholder","defaultValue","e","target","value","confirmEditCategory","confirmDeleteCategory","confirmAddCategory","React","Component"],"mappings":"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","file":"static/js/15.1ccd30c0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Row, Spin, Card, Modal, Button, Input, Upload, message } from \"antd\";\nimport { LoadingOutlined, EditOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { api_base_url, method_post, headers, axios_config } from '../../util/config'\nconst { Meta } = Card;\n\nclass Categories extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories_data: [],\n            isLoading: true,\n            viewEditModal: false,\n            viewDeleteModal: false,\n            viewAddModal: false,\n            category_id: '',\n            category_title: '',\n            category_picture: '',\n            is_pic_change: false,\n            new_category_title: '',\n            new_category_picture: '',\n        };\n        this.handleEditCategory = this.handleEditCategory.bind(this);\n        this.handleDeleteCategory = this.handleDeleteCategory.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchAllCategories()\n    }\n\n    fetchAllCategories() {\n        fetch(api_base_url + \"listAllCategories\", method_post).then(response => response.json())\n            .then(response => {\n                this.setState({ categories_data: response.data, isLoading: false })\n            })\n            .catch();\n    }\n\n    handleEditCategory(data) {\n        this.setState({ category_id: data.id, category_title: data.category_name, category_picture: data.picture })\n        this.setViewEditModal(true)\n    }\n\n    handleDeleteCategory(data) {\n        this.setState({ category_id: data.id })\n        this.setViewDeleteModal(true)\n    }\n\n    setViewEditModal(viewEditModal) { this.setState({ viewEditModal }) }\n    setViewDeleteModal(viewDeleteModal) { this.setState({ viewDeleteModal }) }\n    setViewAddModal(viewAddModal) { this.setState({ viewAddModal }) }\n\n    // Confirm Delete Category\n    confirmDeleteCategory(category_id) {\n        this.setViewDeleteModal(false)\n        const requestOptions = {\n            method: 'DELETE',\n            headers,\n            body: JSON.stringify({ category_id: category_id })\n        }\n        fetch(api_base_url + \"deleteCategory\", requestOptions).then(response => response.json())\n            .then(response => {\n                message.success(\"Removed Successfully\")\n                this.setState({ isLoading: true })\n                this.fetchAllCategories()\n\n            })\n            .catch();\n    }\n\n    // Confirm Edit Category\n    confirmEditCategory(category_id) {\n        this.setViewEditModal(false)\n\n        var formData = new FormData();\n        if (this.state.is_pic_change === true)\n            formData.append(\"image\", this.state.image_obj)\n\n        formData.append(\"category_name\", this.state.category_title)\n        formData.append(\"category_id\", category_id)\n        formData.append(\"is_pic_change\", this.state.is_pic_change)\n\n        axios.put(api_base_url + 'editCategory', formData, axios_config)\n            .then((response) => {\n                if (response.data.status) {\n                    message.success(response.data.message)\n                    this.setState({ isLoading: true })\n                    this.fetchAllCategories()\n\n                } else {\n                    message.error(response.data.message)\n                }\n            })\n            .catch((error) => {\n                message.error(\"Something went wrong!\", error)\n            })\n    }\n\n    // Confirm Add Category\n    confirmAddCategory() {\n        this.setViewAddModal(false)\n\n        var formData = new FormData();\n        formData.append(\"image\", this.state.new_image_obj)\n        formData.append(\"category_name\", this.state.new_category_title)\n\n        axios.post(api_base_url + 'addCategory', formData, axios_config)\n            .then((response) => {\n                if (response.data.status) {\n                    message.success(response.data.message)\n                    this.setState({ isLoading: true })\n                    this.setState({ new_category_picture: '', new_category_title: '' })\n                    this.fetchAllCategories()\n\n                } else {\n                    message.error(response.data.message)\n                }\n            })\n            .catch((error) => {\n                message.error(\"Something went wrong!\", error)\n            })\n    }\n\n    // Upload Category Image\n    getBase64(img, callback) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    beforeUpload(file) {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('Image must smaller than 2MB!');\n        }\n        return isJpgOrPng && isLt2M;\n    }\n\n    handleChange = info => {\n        this.setState({ is_pic_change: true })\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.setState({ image_obj: info.file.originFileObj })\n            this.getBase64(info.file.originFileObj, category_picture =>\n                this.setState({\n                    category_picture,\n                    loading: false,\n                }),\n            );\n        }\n    };\n\n    // Add New Category Picture\n    handleChangeAdd = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.setState({ new_image_obj: info.file.originFileObj })\n            this.getBase64(info.file.originFileObj, new_category_picture =>\n                this.setState({\n                    new_category_picture,\n                    loading: false,\n                }),\n            );\n        }\n    };\n\n    render() {\n        const { categories_data, isLoading, viewEditModal, viewDeleteModal, viewAddModal } = this.state;\n        const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\n        const { loading, category_picture, category_title, category_id, new_category_picture, new_category_title } = this.state;\n        const uploadButton = (\n            <div>\n                {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                <div style={{ marginTop: 8 }}>Upload</div>\n            </div>\n        );\n\n        return (\n            <div>\n\n                {/* Populate Data */}\n                <Row>\n                    <Col span={12}>\n                        <h2 className=\"title gx-mb-4\">Categories</h2>\n                        <Button type=\"primary\" onClick={() => this.setViewAddModal(true)}>Add</Button>\n                    </Col>\n\n                    {isLoading ?\n                        <Col span={24}>\n                            <Spin indicator={antIcon} />\n                        </Col>\n                        :\n                        <Col span={24}>\n                            <div className=\"site-card-wrapper\">\n                                <Row gutter={16}>\n                                    {categories_data.map((data, index) => (\n                                        <Col span={6}>\n                                            <Card\n                                                style={{ width: 300 }}\n                                                cover={<img alt={data.picture} src={data.picture} width=\"300px\" height=\"125px\" />}\n                                                actions={[\n                                                    <EditOutlined key=\"edit\" onClick={() => this.handleEditCategory(data)} />,\n                                                    <DeleteOutlined key=\"delete\" onClick={() => this.handleDeleteCategory(data)} />\n                                                ]}>\n                                                <Meta title={data.category_name} />\n                                            </Card>\n                                        </Col>\n                                    ))}\n                                </Row>\n                            </div>\n                        </Col>\n                    }\n                </Row>\n\n                {/* View Edit Modal */}\n                <Modal\n                    centered\n                    visible={viewEditModal}\n                    footer={null}\n                    header={null}\n                    onCancel={() => this.setViewEditModal(false)}>\n\n                    <Row gutter={16}>\n                        <Col span={8}>\n                            <Upload\n                                name=\"avatar\"\n                                listType=\"picture-card\"\n                                className=\"avatar-uploader\"\n                                showUploadList={false}\n                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                                beforeUpload={this.beforeUpload}\n                                onChange={this.handleChange} >\n                                {category_picture ? <img src={category_picture} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                            </Upload>\n\n                            <Input id='cat_name' size=\"large\" placeholder=\"Category Name\" defaultValue={category_title} onChange={(e) => this.setState({ category_title: e.target.value })} />\n                        </Col>\n                    </Row>\n                    <br />\n\n                    <div className=\"gx-card-list-footer\">\n                        <Button type=\"primary\" onClick={() => this.confirmEditCategory(category_id)}>Update</Button>\n                        <Button onClick={() => this.setViewEditModal(false)}>Cancel</Button>\n                    </div>\n\n                </Modal>\n\n                {/* View Delete Modal */}\n                <Modal\n                    centered\n                    visible={viewDeleteModal}\n                    footer={null}\n                    header={null}\n                    onCancel={() => this.setViewDeleteModal(false)}>\n\n                    <p className=\"gx-text-grey gx-mb-2\">Are you sure you want to delete {category_title}?</p>\n                    <div className=\"gx-card-list-footer\">\n                        <Button type=\"primary\" onClick={() => this.confirmDeleteCategory(category_id)}>Yes</Button>\n                        <Button onClick={() => this.setViewDeleteModal(false)}>No</Button>\n                    </div>\n\n                </Modal>\n\n                {/* View Add Modal */}\n                <Modal\n                    centered\n                    visible={viewAddModal}\n                    footer={null}\n                    header={null}\n                    onCancel={() => this.setViewAddModal(false)}>\n\n                    <Row gutter={16}>\n                        <Col span={8}>\n                            <Upload\n                                name=\"avatar\"\n                                listType=\"picture-card\"\n                                className=\"avatar-uploader\"\n                                showUploadList={false}\n                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                                beforeUpload={this.beforeUpload}\n                                onChange={this.handleChangeAdd} >\n                                {new_category_picture ? <img src={new_category_picture} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                            </Upload>\n\n                            <Input size=\"large\" placeholder=\"Category Name\" defaultValue={new_category_title} onChange={(e) => this.setState({ new_category_title: e.target.value })} />\n                        </Col>\n                    </Row>\n                    <br />\n\n                    <div className=\"gx-card-list-footer\">\n                        <Button type=\"primary\" onClick={() => this.confirmAddCategory()}>Add</Button>\n                        <Button onClick={() => this.setViewAddModal(false)}>Cancel</Button>\n                    </div>\n\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Categories;"],"sourceRoot":""}